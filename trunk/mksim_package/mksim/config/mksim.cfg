# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# mksim.cfg: configuration file
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# --------------------------------------------- Directories ----------------------------------------
[DIR] 

[DIR.INPUT]
BASE_INPUT_DIR = ./input         # location of input objects to process     

[DIR.OUTPUT]
BASE_OUTPUT_DIR   = ./output     # where to store results, etc.
###BASE_OUTPUT_DIR   = /media/marc/MARC_DISK_1/EPFL_work/mks/output     # where to store results, etc.
OUTPUT_PLOT_DIR   = plots        # where to save plots
OUTPUT_MAP_DIR    = maps         # where to save maps
OUTPUT_STAT_DIR   = stats        # where to record statistics
OUTPUT_LOG_DIR    = logs         # where to write logs
OUTPUT_RESULT_DIR = results      # where to write results of runs
OUTPUT_ERROR_DIR  = errors       # where to write errors during runs


# ----------------------------------------- SIMULATION settings ------------------------------------
[SIMULATION]

# --- Definitions ----------------------------------------------------------------------------------
# NB_FIELDS          : number of simulation fields to generate
# NB_REALIZATIONS    : number of realizations in each field   
# NB_GAL_ANGLE_RING  : number of galaxy position angles in a ring (steps automatically determined)
# MAX_CENTROID_SHIFT : distribution of galaxy centroid shifts in a field (pixels)
# APPLY_PSF          : specify if galaxies are to be convolved with their matching PSF
# CONVOLUTION_METHOD : implementation of convolution algorithm: [galsim_fft, scipy_fft]      
# --------------------------------------------------------------------------------------------------

# --- Probability distributions:
# constant           : fixed value     [const]
# normal             : normal pdf      [mean, sigma]
# log-normal         : log-normal pdf  [mean, sigma]
# rayleigh           : Rayleigh pdf    [sigma]
# uniform            : uniform pdf     [min, max]
# sequence           : list of possible values (repeated pattern)
# --------------------------------------------------------------------------------------------------

NB_FIELDS          = 1
NB_REALIZATIONS    = 64
NB_ANGLES_RING     = 1
APPLY_PSF          = True 
CONVOLUTION_METHOD = galsim_fft  # [galsim_fft or scipy_fft]


# ------------------------------------ Simulation Image Dataset ------------------------------------
[PRIMARY_DATASET]

NAME = simulations

# --- Properties of IMAGES in the Dataset
[PRIMARY_DATASET.IMAGE_PROPERTIES]

PIXEL_FLOAT_SIZE  = float32                    # size of float for pixel values [float32, float64]
PIXEL_SCALE       = 0.2                        # pixel scale for the galaxies & PSFs (arcsec/pixel)
GAL_STAMP_SIZE    = 64                         # stamp size (pixels) for the galaxies 
PSF_STAMP_SIZE    = 64                         # stamp size (pixels) for the PSFs
HDU_NO            = 0                          # HDU of FITS image

[PRIMARY_DATASET.IMAGE_PROPERTIES.STAR : PRIMARY_DATASET.IMAGE_PROPERTIES]
   FILENAME_PATTERNS = ["psf_image*000*.fits"]              # image filename matching
   OUTPUT_FILE_NAME  = psf_image-{0:03d}-{1:1d}.fits    # output PSF file name

[PRIMARY_DATASET.IMAGE_PROPERTIES.GALAXY: PRIMARY_DATASET.IMAGE_PROPERTIES] 
   FILENAME_PATTERNS = ["gal_image*000*.fits"]              # image filename matching
   OUTPUT_FILE_NAME  = gal_image-{0:03d}-{1:1d}.fits    # output PSF file name


# --- Properties of CATALOGS in the Dataset
[PRIMARY_DATASET.CATALOG_PROPERTIES]

HDU_NO = 1                                # HDU if the catalog is a FITS table

[PRIMARY_DATASET.CATALOG_PROPERTIES.STAR : PRIMARY_DATASET.CATALOG_PROPERTIES]
   FILENAME_PATTERNS    = ["psf_catalog*.txt"]           # catalog filename matching
   IS_ASCII_FORMAT      = True                           # If False, assume FITS format 
   IS_SEXTRACTOR_FORMAT = False                           # True if SEXtractor format (text catalog)
   OUTPUT_FILE_NAME     = psf_catalog-{0:03d}-{1:1d}.txt # output PSF catalog file name

[PRIMARY_DATASET.CATALOG_PROPERTIES.GALAXY : PRIMARY_DATASET.CATALOG_PROPERTIES]
   FILENAME_PATTERNS    = ["gal_catalog*.txt"]            # catalog filename matching
   IS_ASCII_FORMAT      = True                            # If False, assume FITS format 
   IS_SEXTRACTOR_FORMAT = False                            # True if SEXtractor format (ASCII_HEAD)
   OUTPUT_FILE_NAME     = gal_catalog-{0:03d}-{1:1d}.txt  # output galaxy catalog file name


# ------------------------------------------- GALAXY objects ---------------------------------------
[GALAXY]

# ----------------- Galaxy model
[GALAXY.MODEL]

# --- Possible models: -----------------------------------------------------------------------------
# scsersic            : basic single component Sersic profile implementation in Python
# gscsersic           : single component Sersic profile implemented using GalSim exponential disk
# gbdsersic_r         : bulge+disk Sersic profile implemented using GalSim (reduced shear)
# gbdsersic_d         : bulge+disk Sersic profile implemented using GalSim (distortion)
# gaussian            : Gaussian profile implemented using GalSim (Sersic with n=0.5)

# --------------------------------------------------------------------------------------------------

# --- Profile Parameter Definitions ----------------------------------------------------------------
# DISK_HLR, BULGE_HLR     : disk and bulge half-light radius in arc seconds
# DISK_SIGMA              : disk size for a Gaussian profile; DISK_SIGMA^2 = DISK_HLR^2/(2 x ln(2))
# DISK_INDEX, BULGE_INDEX : disk and bulge Sersic index
# DISK_FLUX_FRAC          : disk flux fraction with respect to total flux normalized to unity
# BULGE_CSHIFT            : bulge centroid shift in fractions of pixels (bulge + disk models)
# GAL_E1, GAL_E2          : intrinsic ellipticity components (e1, e2)
# GAL_INIT_ANGLE          : galaxy initial position angle in a ring  
# GAL FLUX                : galaxy total flux in ADUs
# GAL_CSHIFT              : galaxy centroid shift in fractions of pixels 
# --------------------------------------------------------------------------------------------------


MODEL_NAME = gbdsersic_r

# --- Single-component SERSIC    # single-component Sersic (GalSim) 
[GALAXY.MODEL.GSCSERSIC]     
 
DISK_INDEX     = {"dist": "rayleigh", "params": [2.0, 0.3], "scope": "object", "range": [0.3, 6.0]}     
DISK_HLR       = {"dist": "constant", "params": [1.0], "scope": "field", "range": [0.5, 1.5]}  

GAL_E1         = {"dist": "constant", "params": [0.0], "scope": "field", "range": [-0.9, 0.9]}  
GAL_E2         = {"dist": "constant", "params": [0.0], "scope": "field", "range": [-0.9, 0.9]}  
GAL_FLUX       = {"dist": "constant", "params": [1000.0], "scope": "field"}
GAL_CSHIFT     = {"dist": "constant", "params": [0.0, 0.0], "scope": "object"} 
GAL_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "object", "range": [0, 179]}   

# --- Single-component SERSIC
[GALAXY.MODEL.SCSERSIC]          # single-component Sersic 
 
DISK_INDEX     = {"dist": "constant", "params": [1.0], "scope": "field", "range": [0.2, 6.0]}     
DISK_HLR       = {"dist": "constant", "params": [1.0], "scope": "field"}  

GAL_E1         = {"dist": "sequence", "params": [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], "scope": "field", "range": [-0.8, 0.8]}  
GAL_E2         = {"dist": "sequence", "params": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "scope": "field", "range": [-0.8, 0.8]}  
GAL_FLUX       = {"dist": "constant", "params": [1000.0], "scope": "field"}
GAL_CSHIFT     = {"dist": "constant", "params": [0.0], "scope": "field"} 
GAL_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "field", "range": [0, 180]}      

# --- BULGE / DISK               # bulge disk (reduced shear)
[GALAXY.MODEL.GBDSERSIC_R]   

DISK_INDEX     = {"dist": "constant", "params": [1.0], "scope": "field", "range": [0.2, 6.0]}     
DISK_HLR       = {"dist": "normal",   "params": [1.0, 0.1], "scope": "object"}  
                                                                        
BULGE_INDEX    = {"dist": "constant", "params": [4.0], "scope": "field", "range": [4.0, 6.0]}
BULGE_HLR      = {"dist": "normal",   "params": [1.0, 0.1], "scope": "object"}
BULGE_CSHIFT   = {"dist": "constant", "params": [0.0], "scope": "field"} 

GAL_E1         = {"dist": "normal",   "params": [0.0, 0.2], "scope": "object", "range": [-0.2, 0.2]}  
GAL_E2         = {"dist": "normal",   "params": [0.0, 0.2], "scope": "object", "range": [-0.2, 0.2]}  
GAL_INIT_ANGLE = {"dist": "uniform",  "params": [0.0, 179.0], "scope": "object", "range": [0, 179]}    
GAL_FLUX       = {"dist": "normal",   "params": [1000.0, 200.0], "scope": "object"}
GAL_CSHIFT     = {"dist": "normal",   "params": [0.0, 1.0], "scope": "object"} 
DISK_FLUX_FRAC = {"dist": "uniform",  "params": [0.0, 1.0], "scope": "object"}

# --- BULGE / DISK               # bulge disk (distortion)
[GALAXY.MODEL.GBDSERSIC_D]   

DISK_INDEX     = {"dist": "constant", "params": [1.0], "scope": "field", "range": [0.2, 6.0]}     
DISK_HLR       = {"dist": "constant", "params": [1.0], "scope": "field"}  
                                                                        
BULGE_INDEX    = {"dist": "constant", "params": [4.0], "scope": "field", "range": [4.0, 6.0]}
BULGE_HLR      = {"dist": "constant", "params": [0.3], "scope": "field"}
BULGE_CSHIFT   = {"dist": "constant", "params": [0.0], "scope": "field"} 

GAL_E1         = {"dist": "sequence", "params": [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], "scope": "field", "range": [-0.8, 0.8]}  
GAL_E2         = {"dist": "sequence", "params": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "scope": "field", "range": [-0.8, 0.8]}  
GAL_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "field", "range": [0, 180]}    
GAL_FLUX       = {"dist": "constant", "params": [1000.0], "scope": "field"}
GAL_CSHIFT     = {"dist": "constant", "params": [0.0], "scope": "field"} 
DISK_FLUX_FRAC = {"dist": "constant", "params": [0.6], "scope": "field"}

# --- Single-component GAUSSIAN
[GALAXY.MODEL.GAUSSIAN]          # single-component Gaussian (Galsim) 

DISK_SIGMA     = {"dist": "constant", "params": [2./math.sqrt(2*math.log(2))], "scope": "field"}     # arcsecs

GAL_E1         = {"dist": "constant", "params": [0.0], "scope": "field", "range": [-0.8, 0.8]}  
GAL_E2         = {"dist": "constant", "params": [0.0], "scope": "field", "range": [-0.8, 0.8]}  
GAL_FLUX       = {"dist": "constant", "params": [1000.0], "scope": "field"}
GAL_CSHIFT     = {"dist": "constant", "params": [0], "scope": "field"} 
GAL_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "field", "range": [0, 180]}      

# -------------------------------------------- PSF objects -----------------------------------------
[PSF]

# ----------------- PSF model
[PSF.MODEL]

# --- Possible models: ---------------------------------------------------------------------
# gaussian        : Gaussian profile implementation using GalSim
# gmoffat         : Moffat profile implementation using GalSim
# --------------------------------------------------------------------------------------------------

# --- Profile Parameter Definitions ----------------------------------------------------------------
# PSF_FWHM       : PSF FWHM in arc seconds
# PSF_BETA       : PSF Moffat beta
# PSF_E1, PSF_E2 : PSF ellipticity components
# PSF_INIT_ANGLE : PSF initial position angles in a ring  
# PSF FLUX       : PSF total flux in ADUs
# --------------------------------------------------------------------------------------------------

MODEL_NAME = gmoffat

# --- Gaussian
[PSF.MODEL.GAUSSIAN]     # single-component Gaussian (Galsim) 

PSF_FWHM       = {"dist": "constant", "params": [3.0], "scope": "field"}  
PSF_E1         = {"dist": "constant", "params": [0.0], "scope": "field"}  
PSF_E2         = {"dist": "constant", "params": [0.0], "scope": "field"}  
PSF_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "field"}      
PSF_FLUX       = {"dist": "constant", "params": [1.0], "scope": "field"}
PSF_CSHIFT     = {"dist": "constant", "params": [0.0], "scope": "field"} 

# --- Moffat
[PSF.MODEL.GMOFFAT]      # single-component Gaussian (Galsim) 

PSF_BETA       = {"dist": "constant", "params": [3.00], "scope": "field"}
PSF_FWHM       = {"dist": "constant", "params": [2.85], "scope": "field"}  
PSF_E1         = {"dist": "constant", "params": [0.03], "scope": "field"}  
PSF_E2         = {"dist": "constant", "params": [0.03], "scope": "field"}  
PSF_INIT_ANGLE = {"dist": "constant", "params": [0.0], "scope": "field"}      
PSF_FLUX       = {"dist": "constant", "params": [1.0], "scope": "field"}
PSF_CSHIFT     = {"dist": "constant", "params": [0.0], "scope": "field"} 

# ------------------------------------------------ SHEAR -------------------------------------------
[SHEAR]

###GAL_G1 = {"dist": "sequence", "params": [-0.03, -0.02, -0.01, +0.0, +0.01, +0.02, +0.03], "scope": "field"}  
###GAL_G2 = {"dist": "sequence", "params": [+0.01, +0.02, +0.03, +0.0, -0.03, -0.02, -0.01], "scope": "field"}  

GAL_G1 = {"dist": "normal", "params": [0.0, 0.025], "scope": "field"}  
GAL_G2 = {"dist": "normal", "params": [0.0, 0.025], "scope": "field"}  

# ------------------------------------------------ NOISE -------------------------------------------
[NOISE]

[NOISE.MODEL]

# --- Noise Parameter Definitions-------------------------------------------------------------------
# SIGMA_NOISE          : standard deviation of the counts in each pixel
# READ_NOISE           : Gaussian Read noise in ADU / pixel
# SUBSTRACTED_SKY      : sky level already substracted from the image (ADU / arcsec^2)
# ADDITIONAL_SKY       : extra sky level to add to the image (ADU / arcsec^2)
# GAIN                 : gain (counts/ADU)
# WANTED_SNR           : appoximate signal-to-noise ratio to reach (-1: no SNR adjustment)
# --------------------------------------------------------------------------------------------------

# --- Noise model to apply to galaxies and PSFs
GALAXY_NOISE_MODEL_NAME = CCD_noise  # [no_noise, simple_gaussian, simple_poisson, CCD_noise]

# ----------------- Gaussian Noise
[NOISE.MODEL.SIMPLE_GAUSSIAN]

SIGMA_NOISE     = {"dist": "constant", "params": [0.5], "scope": "field"}  
ADDITIONAL_SKY  = {"dist": "normal",   "params": [0.0, 0.0], "scope": "field"}
WANTED_SNR      = {"dist": "constant", "params": [-1],  "scope": "field"}

# ----------------- Poisson Noise
[NOISE.MODEL.SIMPLE_POISSON]

SUBSTRACTED_SKY = {"dist": "constant", "params": [500.00], "scope": "field"}
ADDITIONAL_SKY  = {"dist": "constant", "params": [0.00], "scope": "field"}
WANTED_SNR      = {"dist": "sequence", "params": [10, 20, 40, 60, 80, 100, 200], "scope": "field"}

# ----------------- CCD noise: Gaussian Read noise + Poisson noise
[NOISE.MODEL.CCD_NOISE]

GAIN            = {"dist": "constant", "params": [1.0], "scope": "field"}
READ_NOISE      = {"dist": "constant", "params": [0.25], "scope": "field"}
SUBSTRACTED_SKY = {"dist": "constant", "params": [50.00], "scope": "field"}
ADDITIONAL_SKY  = {"dist": "constant", "params": [0.00], "scope": "field"}
WANTED_SNR      = {"dist": "sequence", "params": [-1], "scope": "field"}


# ----------------------------------------------- Logging ------------------------------------------
[LOGGING]
MASTER_LOGGING_ENABLED = True          # quiet mode if set to False
CREATE_WORKER_LOGGERS = per_job        # among: {none, per_job, per_worker}

# -------------------------------------------- Multiprocessing -------------------------------------
[MULTIPROC_SMP]
WORKER_PROCESSES_COUNT = 0    # nb. worker processes for SMP (0 automatic detection, > 0 otherwise)

##################################
#  mpfg3.cfg: configuration file #
##################################

# -------------------------------------------- Directories------------------------------------------
[DIR] 

[DIR.INPUT]
BASE_INPUT_DIR = ./input               # location of input objects to process     

[DIR.OUTPUT]
BASE_OUTPUT_DIR = ./output             # where to store results, etc.
OUTPUT_PLOT_DIR   = plots              # where to save plots
OUTPUT_MAP_DIR    = maps               # where to save maps
OUTPUT_STAT_DIR   = stats              # where to record statistics
OUTPUT_LOG_DIR    = logs               # where to write logs
OUTPUT_RESULT_DIR = results            # where to write results of runs
OUTPUT_ERROR_DIR  = errors             # where to write errors during runs

# ----------------------------------------- GREAT3 Dataset -----------------------------------------
[PRIMARY_DATASET]

NAME = dataset                         # name of dataset to use
TYPE = Mpfg3                           # class prefix of dataset to use: will be resolved to
                                       # class <TYPE>Dataset or class <TYPE>MultiEpochDataset
BASE_DIR = $HOME/GREAT3/               # dataset base input directory

# List of file search patterns to query from the dataset
FILE_PATTERNS = ["image*", "galaxy_catalog*"]

# ------------------------------------------------------------------------------------------
# Note: 
#
# - To process all types of files use: 
#   FILE_PATTERNS = ["*"]
#
# - To query only stars and star-related files, use:
#   FILE_PATTERNS = ["star*"] or FILE_PATTERNS = ["*star*"] to include deep images
#
# - To query only galaxies and galaxy-related files, use:
#   FILE_PATTERNS = ["image*", "galaxy_catalog*"], or:
#   FILE_PATTERNS = ["image*", "deep_image*", "*galaxy_catalog*"] to include deep images
# ------------------------------------------------------------------------------------------

# List of specific directories to search [optional], e.g. ["control", "real_galaxy/ground"]
DIR_INPUT_LIST = ["multiepoch"]

# Recursive directory search (True/False)
DIR_RECURSE = True

# List of Image numbers (use [] to process all images (IMAGE_LIST has priority over IMAGE_RANGE
IMAGE_LIST  = [0]                       
 
# [Min,Max] image number range (-1 or [] to disable criterion)        
IMAGE_RANGE = []                       

# --- Properties of Images in the Dataset
[PRIMARY_DATASET.IMAGE_PROPERTIES]

[PRIMARY_DATASET.IMAGE_PROPERTIES.STAR]
FILENAME_PATTERNS = ["starfield*"]         # star image filename matching

[PRIMARY_DATASET.IMAGE_PROPERTIES.GALAXY] 
FILENAME_PATTERNS = ["image*.fits"]        # galaxy image filename matching


# --- Properties of Catalogs in the Dataset
[PRIMARY_DATASET.CATALOG_PROPERTIES]

[PRIMARY_DATASET.CATALOG_PROPERTIES.STAR]
FILENAME_PATTERNS = ["star_catalog*"]      # star catalog filename matching

# Properties of Catalogs in the Dataset
[PRIMARY_DATASET.CATALOG_PROPERTIES.GALAXY]
FILENAME_PATTERNS = ["galaxy_catalog*"]    # galaxy catalog filename matching


# ------------------------------------------- Job Management ---------------------------------------
[JOB_MANAGEMENT]

# If True, group multi-epoch files in a single job instead of creating one job per epoch
MULTIPLE_EPOCHS_PER_JOB = False

# ---------------------------------------------- Logging -------------------------------------------
[LOGGING]
MASTER_LOGGING_ENABLED = True          # quiet mode if set to False
CREATE_WORKER_LOGGERS = per_job        # among: {none, per_job, per_worker}

# ------------------------------------------ Multiprocessing ---------------------------------------
[MULTIPROC_SMP]
WORKER_PROCESSES_COUNT = 0             # nb. workers for SMP (0 automatic detection, > 0 otherwise)

# === EOF ===

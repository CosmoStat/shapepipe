# ShapePipe Configuration File Example

## Default ShapePipe options
[DEFAULT]
# VERBOSE (optional) default is True, i.e. print everything
; VERBOSE = False
# RUN_NAME (optional) default is shapepipe_run
; RUN_NAME = my_shapepipe_run
# RUN_DATETIME (optional) default is True, i.e. add DATE and TIME to RUN_NAME
; RUN_DATETIME = False

## ShapePipe execution options
[EXECUTION]
# MODULE (required) must be a valid module runner name (or a comma separated list of names)
MODULE = make_catalog_runner
; MODULE = execute_example
MODE = smp

## ShapePipe file handling options
[FILE]
# LOG_NAME (optional) default is shapepipe
; LOG_NAME = my_shapepipe_log
# RUN_LOG_NAME (optional) default is shapepipe_runs
; RUN_LOG_NAME = my_shapepipe_run_log
# INPUT_DIR (required) must be a valid directory containing input files for the first module
INPUT_DIR = last:sextractor_runner,last:psfexinterp_runner,last:spread_model_runner,last:ngmix_runner
; INPUT_DIR = last,python_example
# OUTPUT_DIR (required) must be a valid directory to write the pipeline output files
OUTPUT_DIR = /home/guinot/ShapePipe_dir/output_tiles
# FILE_PATTERN (opional) list of string patterns to identify input files
FILE_PATTERN = tile_sexcat,sexcat_sm,galaxy_psf,ngmix
# FILE_EXT (opional) list of string extensions to identify input files
FILE_EXT = .fits,.fits,.npy,.fits
# NUMBERING_SCHEME (optional) string with numbering pattern for input files
NUMBERING_SCHEME = -000-0

## ShapePipe job handling options
[JOB]
# BATCH_SIZE (optional) default is 1, i.e. run all jobs in serial
SMP_BATCH_SIZE = 48
# TIMEOUT (optional) default is None, i.e. no timeout limit applied
TIMEOUT = 05:00:00

## Module options
[MASK_RUNNER]

MASK_CONFIG_PATH = /home/guinot/pipeline/ShapePipe/example/test_all_tile/config.mask

# Suffix for the output file. (OPTIONAL)
# ex : SUFFIX_flag_NUMBERING.fits or flag_NUMBERING.fits if not provided
SUFFIX = pipeline

[SEXTRACTOR_RUNNER]

ADD_INPUT_DIR = /home/guinot/ShapePipe_dir/tiles
FILE_PATTERN = image,weight,pipeline_flag

EXEC_PATH = sex

DOT_SEX_FILE = /home/guinot/pipeline/ShapePipe/example/test_all_tile/default.sex
DOT_PARAM_FILE = /home/guinot/pipeline/ShapePipe/example/test_sex/default.param

WEIGHT_IMAGE = True
FLAG_IMAGE = True
PSF_FILE = False

#CHECKIMAGE can be a list of BACKGROUND, BACKGROUND_RMS,
#INIBACKGROUND, MINIBACK_RMS, -BACKGROUND,
#FILTERED, OBJECTS, -OBJECTS, SEGMENTATION, APERTURES
; CHECKIMAGE = BACKGROUND

# Suffix for the output file. (OPTIONAL)
# ex : SUFFIX_sexcat_NUMBERING.fits or sexcat_NUMBERING.fits if not provided
SUFFIX = tile

#####################
# POST-PROCESS PART #
#####################
# This part only concern tiles. It will make the management of multi-epoch possible.

MAKE_POST_PROCESS = True

# Create with the split_exp_hdu module
LOG_WCS = /home/guinot/ShapePipe_dir/log_exp_headers.npy

# World coordinate to use (those parameters has to be required as output of SExtractor)
WORLD_POSITION = XWIN_WORLD,YWIN_WORLD

# Size of one CCD
CCD_SIZE = 2112,4644

[PSFEXINTERP_RUNNER]

INPUT_MODULE = sextractor_runner
FILE_PATTERN = tile_sexcat
FILE_EXT = .fits

# Define the way psfexinter will run.
# CLASSIC for classical run.
# MULTI-EPOCH for multi epoch.
# VALIDATION for output allowing validation (only on single epoch !)
MODE = MULTI-EPOCH

STAR_THRESH = 20
CHI2_THRESH = 2
# When running in multi-epoch those position has to be WCS !
POSITION_PARAMS = XWIN_WORLD,YWIN_WORLD
GET_SHAPES = True

ME_DOT_PSF_DIR = /home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-07_02-55-53/psfex_runner/output
ME_DOT_PSF_PATTERN = star_selection
ME_LOG_WCS = /home/guinot/ShapePipe_dir/log_exp_headers.npy

[VIGNETMAKER_RUNNER]

INPUT_MODULE = sextractor_runner
ADD_INPUT_DIR = /home/guinot/ShapePipe_dir/tiles
FILE_PATTERN = tile_sexcat, weight
FILE_EXT = .fits,.fits

MASKING = False
MASK_VALUE = 0

MODE = CLASSIC

# Set type of coordinates to use in : PIX (pixel), SPHE (spherical).
COORD = PIX
POSITION_PARAMS = XWIN_IMAGE,YWIN_IMAGE
STAMP_SIZE = 51
# The name will be : SUFFIX_vignet.fits
SUFFIX = weight

[SPREAD_MODEL_RUNNER]

; SUFFIX =
PIXEL_SCALE = 0.186

; Must be in [new, add].
; 'new' will create a new catalog with : [number, mag, sm, sm_err]
; 'add' will output a copy of the input SExtractor with the column sm and sm_err.
OUTPUT_MODE = new

[VIGNETMAKER_RUNNER2]

#INPUT_MODULE = sextractor_runner
#FILE_PATTERN = tile_sexcat
#FILE_EXT = .fits

MASKING = False
MASK_VALUE = 0

MODE = MULTI-EPOCH

# Set type of coordinates to use in : PIX (pixel), SPHE (spherical).
COORD = SPHE
POSITION_PARAMS = XWIN_WORLD,YWIN_WORLD
STAMP_SIZE = 51
# The name will be : SUFFIX_vignet.fits
SUFFIX =

ME_IMAGE_DIR = /home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-06_18-37-10/split_exp_runner/output,/home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-06_18-37-10/split_exp_runner/output,/home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-06_18-37-10/split_exp_runner/output,/home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-07_02-55-53/sextractor_runner/output
ME_IMAGE_PATTERN = flag,image,weight,exp_background
ME_LOG_WCS = /home/guinot/ShapePipe_dir/log_exp_headers.npy

[NGMIX_RUNNER]

LOG_WCS = /home/guinot/ShapePipe_dir/log_exp_headers.npy

[MAKE_CATALOG_RUNNER]

SM_DO_CLASSIFICATION = True
SM_STAR_STRESH = 0.003
SM_GAL_THRESH = 0.01

# ShapePipe configuration file for single-exposures


## Default ShapePipe options
[DEFAULT]

# verbose mode (optional), default: True, print messages on terminal
VERBOSE = True

# Name of run (optional) default: shapepipe_run
RUN_NAME = run_sp_exp

# Add date and time to RUN_NAME, optional, default: True
; RUN_DATETIME = False


## ShapePipe execution options
[EXECUTION]

# Module name, single string or comma-separated list of valid module runner names
MODULE = split_exp_runner, merge_headers_runner, mask_runner,
	 sextractor_runner, setools_runner,
	 psfex_runner, psfexinterp_runner

# Run mode, SMP or MPI
MODE = SMP


## ShapePipe file handling options
[FILE]

# Log file master name, optional, default: shapepipe
LOG_NAME = log_sp

# Runner log file name, optional, default: shapepipe_runs
RUN_LOG_NAME = log_run_sp

# Input directory, containing input files, single string or list of names with length matching FILE_PATTERN
INPUT_DIR = last:get_images_runner2

# Output directory
OUTPUT_DIR = $SP_RUN/output

# Numbering convention, string that exemplifies a numbering pattern.
# Matches input single exposures (with 'p' removed)
# Needs to be given in this section, will be updated in module
# sections below
NUMBERING_SCHEME = -0000000


## ShapePipe job handling options
[JOB]

# Batch size of parallel processing (optional), default is 1, i.e. run all jobs in serial
SMP_BATCH_SIZE = 8

# Timeout value (optional), default is None, i.e. no timeout limit applied
TIMEOUT = 96:00:00


## Module options

[SPLIT_EXP_RUNNER]

# Matches compressed single-exposure files
FILE_EXT = .fitsfz, .fitsfz, .fitsfz

# OUTPUT_SUFFIX, actually file name prefixes.
# Expected keyword "flag" will lead to a behavior where the data are save as int.
# The code also expects the image data to use the "image" suffix
# (default value in the pipeline).
OUTPUT_SUFFIX = image, weight, flag

# Number of HDUs/CCDs of mosaic
N_HDU = 40


[MERGE_HEADERS_RUNNER]

FILE_PATTERN = image-, weight-, flag-

# Update file extension to uncompressed FITS files
FILE_EXT = .fits, .fits, .fits

# Output path (optional)
OUTPUT_PATH = $SP_RUN/output


[MASK_RUNNER]

# Parent module
INPUT_MODULE = split_exp_runner

# Update numbering convention, accounting for HDU number of
# single-exposure single-HDU files
NUMBERING_SCHEME = -0000000-0

# Path of mask config file
MASK_CONFIG_PATH = $SP_CONFIG/config.mask

# External mask file flag, use if True, otherwise ignore
USE_EXT_FLAG = True

# External star catalogue flag, use external cat if True,
# obtain from online catalogue if False
USE_EXT_STAR = False

# File name suffix for the output flag files (optional)
SUFFIX = pipeline


[SEXTRACTOR_RUNNER]

# Input from two modules
INPUT_MODULE = split_exp_runner, mask_runner

# Read pipeline flag files created by mask module
FILE_PATTERN = image, weight, pipeline_flag

NUMBERING_SCHEME = -0000000-0

# SExtractor executable path
EXEC_PATH = sex

# SExtractor configuration files
DOT_SEX_FILE = $SP_CONFIG/default_exp.sex
DOT_PARAM_FILE = $SP_CONFIG//default.param
DOT_CONV_FILE = $SP_CONFIG/default.conv

# Use input weight image if True
WEIGHT_IMAGE = True

# Use input flag image if True
FLAG_IMAGE = True

# Use input PSF file if True
PSF_FILE = False


# True if photometry zero-point is to be read from exposure image header
ZP_FROM_HEADER = True

# If ZP_FROM_HEADER is True, zero-point key name
ZP_KEY = PHOTZP

# Background information from image header.
# If BKG_FROM_HEADER is True, background value will be read from header.
# In that case, the value of BACK_TYPE will be set atomatically to MANUAL.
# This is used e.g. for the LSB images.
BKG_FROM_HEADER = False
# LSB images:
# BKG_FROM_HEADER = True

# If BKG_FROM_HEADER is True, background value key name
# LSB images:
#BKG_KEY = IMMODE

# Type of image check (optional), default not used, can be a list of
# BACKGROUND, BACKGROUND_RMS, INIBACKGROUND, MINIBACK_RMS, -BACKGROUND, 
# FILTERED, OBJECTS, -OBJECTS, SEGMENTATION, APERTURES
CHECKIMAGE = BACKGROUND

# File name suffix for the output sextractor files (optional) SUFFIX = tile
SUFFIX = sexcat

## Post-processing

# Not required for single exposures
MAKE_POST_PROCESS = FALSE


[SETOOLS_RUNNER]

INPUT_MODULE = sextractor_runner

# Note: Make sure this doe not match the SExtractor background images
# (sexcat_background*)
FILE_PATTERN = sexcat_sexcat

NUMBERING_SCHEME = -0000000-0

# SETools config file
SETOOLS_CONFIG_PATH = $SP_CONFIG/star_selection.setools


[PSFEX_RUNNER]

# Use 80% sample for PSF model
FILE_PATTERN = star_split_ratio_80

NUMBERING_SCHEME = -0000000-0

# Path to executable for the PSF model
EXEC_PATH = psfex

# Default psfex configuration file
DOT_PSFEX_FILE = $SP_CONFIG/default.psfex


[PSFEXINTERP_RUNNER]

# Use 20% sample for PSF validation
FILE_PATTERN = star_split_ratio_80, star_split_ratio_20, psfex_cat

#FILE_PATTERN = star_selection,star_selection,psfex_cat

FILE_EXT = .psf, .fits, .cat

NUMBERING_SCHEME = -0000000-0

# Run mode for psfex interpolation:
#  CLASSIC: 'classical' run, interpolate to object positions
#  MULTI-EPOCH: interpolate for multi-epoch images
#  VALIDATION: validation for single-epoch images
MODE = VALIDATION

# Column names of position parameters
POSITION_PARAMS = XWIN_IMAGE,YWIN_IMAGE

# If True, measure and store ellipticity of the PSF (using moments)
GET_SHAPES = True

# Minimum number of stars per CCD for PSF model to be computed
STAR_THRESH = 22

# Maximum chi^2 for PSF model to be computed on CCD
CHI2_THRESH = 2

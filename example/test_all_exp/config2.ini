# ShapePipe Configuration File Example

## Default ShapePipe options
[DEFAULT]
# VERBOSE (optional) default is True, i.e. print everything
; VERBOSE = False
# RUN_NAME (optional) default is shapepipe_run
; RUN_NAME = my_shapepipe_run
# RUN_DATETIME (optional) default is True, i.e. add DATE and TIME to RUN_NAME
; RUN_DATETIME = False

## ShapePipe execution options
[EXECUTION]
# MODULE (required) must be a valid module runner name (or a comma separated list of names)
MODULE = psfexinterp_runner
; MODULE = execute_example
MODE = SMP

## ShapePipe file handling options
[FILE]
# LOG_NAME (optional) default is shapepipe
; LOG_NAME = my_shapepipe_log
# RUN_LOG_NAME (optional) default is shapepipe_runs
; RUN_LOG_NAME = my_shapepipe_run_log
# INPUT_DIR (required) must be a valid directory containing input files for the first module
INPUT_DIR = last:psfex_runner,last:setools_runner
; INPUT_DIR = last,python_example
# OUTPUT_DIR (required) must be a valid directory to write the pipeline output files
OUTPUT_DIR = /home/guinot/ShapePipe_dir/output_singles2
# FILE_PATTERN (opional) list of string patterns to identify input files
#FILE_PATTERN = image,weight,flag,star_cat
# FILE_EXT (opional) list of string extensions to identify input files
#FILE_EXT = .fits,.fits,.fits,.cat
# NUMBERING_SCHEME (optional) string with numbering pattern for input files
FILE_PATTERN = star_selection_psfex,star_selection,psfex_cat
FILE_EXT = .psf,.fits,.cat
NUMBERING_SCHEME = -0000000-0

## ShapePipe job handling options
[JOB]
# BATCH_SIZE (optional) default is 1, i.e. run all jobs in serial
SMP_BATCH_SIZE = 48
# TIMEOUT (optional) default is None, i.e. no timeout limit applied
TIMEOUT = 10:00:00

## Module options
[MASK_RUNNER]

MASK_CONFIG_PATH = /home/guinot/pipeline/ShapePipe/example/test_all_exp/config.mask

# Suffix for the output file. (OPTIONAL)
# ex : SUFFIX_flag_NUMBERING.fits or flag_NUMBERING.fits if not provided
SUFFIX = pipeline

[SEXTRACTOR_RUNNER]

ADD_INPUT_DIR = /home/guinot/ShapePipe_dir/output_singles/shapepipe_run_2019-03-06_18-37-10/split_exp_runner/output
FILE_PATTERN = image,weight,pipeline_flag

EXEC_PATH = sex

DOT_SEX_FILE = /home/guinot/pipeline/ShapePipe/example/test_all_exp/default.sex
DOT_PARAM_FILE = /home/guinot/pipeline/ShapePipe/example/test_sex/default.param

WEIGHT_IMAGE = True
FLAG_IMAGE = True
PSF_FILE = False

#CHECKIMAGE can be a list of BACKGROUND, BACKGROUND_RMS,
#INIBACKGROUND, MINIBACK_RMS, -BACKGROUND,
#FILTERED, OBJECTS, -OBJECTS, SEGMENTATION, APERTURES
CHECKIMAGE = BACKGROUND

# Suffix for the output file. (OPTIONAL)
# ex : SUFFIX_sexcat_NUMBERING.fits or sexcat_NUMBERING.fits if not provided
SUFFIX = exp

MAKE_POST_PROCESS = False

[SETOOLS_RUNNER]

SETOOLS_CONFIG_PATH = /home/guinot/pipeline/ShapePipe/example/test_all_exp/star_selection.setools

[PSFEX_RUNNER]

EXEC_PATH = psfex

DOT_PSFEX_FILE = /home/guinot/pipeline/ShapePipe/example/test_psfex/default.psfex

#CHECKIMAGE can be a list of CHI,PROTOTYPES,SAMPLES,
#RESIDUALS,SNAPSHOTS, MOFFAT,-MOFFAT,-SYMMETRICAL or NONE
; CHECKIMAGE = RESIDUALS

[PSFEXINTERP_RUNNER]
# Define the way psfexinter will run.
# CLASSIC for classical run.
# MULTI-EPOCH for multi epoch.
# VALIDATION for output allowing validation (only on single epoch !)
MODE = VALIDATION

GET_SHAPES = True

STAR_THRESH = 20
CHI2_THRESH = 2
# When running in multi-epoch those position has to be WCS !
POSITION_PARAMS = XWIN_IMAGE,YWIN_IMAGE
